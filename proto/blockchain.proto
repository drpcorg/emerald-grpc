syntax = "proto3";
package emerald;
option java_package = "io.emeraldpay.api.proto";
import "common.proto";

service Blockchain {
    rpc SubscribeHead (Chain) returns (stream ChainHead) {}

    rpc NativeCall (NativeCallRequest) returns (stream NativeCallReplyItem) {}
    rpc NativeSubscribe (NativeSubscribeRequest) returns (stream NativeSubscribeReplyItem) {}

    rpc Describe (DescribeRequest) returns (DescribeResponse) {}
    rpc SubscribeStatus (StatusRequest) returns (stream ChainStatus) {}
    rpc SubscribeNodeStatus(SubscribeNodeStatusRequest) returns (stream NodeStatusResponse) {}
}

message NativeCallRequest {
    ChainRef chain = 1;
    repeated NativeCallItem items = 2;
    Selector selector = 3;
    int32 quorum = 4;
    AvailabilityEnum min_availability = 5;
    uint32 chunk_size = 6; // in bytes
    bool sorted = 7;
}

message NativeCallItem {
    uint32 id = 1;
    string method = 3;
    bytes payload = 4;
    uint64 nonce = 5;
    string request_id = 6;
    repeated Selector selectors = 7;
}

/**
 * Signature for a response
 */
message NativeCallReplySignature {
    /**
     * Original nonce value used for the call
     */
    uint64 nonce = 1;
    /**
     * Signature value
     */
    bytes signature = 2;
    /**
     * Key Id used for the signing
     */
    uint64 key_id = 3;
    /**
     * Id of the upstream produced the response
     * DEPRECATED - now in reply items
     */
    string upstream_id = 4 [deprecated=true];
}

message NativeCallReplyItem {
    uint32 id = 1;
    bool succeed = 2;
    bytes payload = 3;
    string error_message = 4;
    /**
     * Optional signature for the response.
     * Available only when it's configured at the edge dshackle and nonce is provided wit the request.
     */
    NativeCallReplySignature signature = 5;
    uint32 error_code = 6 [deprecated = true];
    string upstream_id = 7;
    string error_data = 8;
    bool chunked = 9;
    bool final_chunk = 10;
    sint32 item_error_code = 11;
}

message NativeSubscribeRequest {
    ChainRef chain = 1;
    string method = 2;
    bytes payload = 3;
    Selector selector = 4;
    uint64 nonce = 5;
}

message NativeSubscribeReplyItem {
    bytes payload = 1;
    NativeCallReplySignature signature = 2;
    string upstream_id = 3;
}

message ChainHead {
    ChainRef chain = 1;
    uint64 height = 2;
    string block_id = 3;
    uint64 timestamp = 4;
    bytes weight = 5;
    uint64 reorg = 6;
    string parent_block_id = 7;
    uint64 slot = 8;
    uint64 current_lower_block = 9;
    uint64 current_lower_slot = 10;
    uint64 current_lower_data_timestamp = 11;
}

message SubscribeNodeStatusRequest {
    uint64 timespan = 1;
    // optional param for tracing
    string trace_id = 2;
}

message NodeStatusResponse {
    string nodeId = 1;
    NodeDescription description = 2;
    NodeStatus status = 3;
}

message NodeDescription {
    ChainRef chain = 1;
    repeated NodeLabels nodeLabels = 2;
    repeated string supportedMethods = 3;
    int32 nodeId = 4;
    repeated string supportedSubscriptions = 5;
    BuildInfo node_build_info = 6;
}

message NodeLabels {
    repeated Label labels = 1;
}

message NodeStatus {
    int64 currentHeight = 1;
    AvailabilityEnum availability = 2;
}

message DescribeRequest {
}

message DescribeResponse {
    repeated DescribeChain chains = 1;
    BuildInfo build_info = 2;
}

message DescribeChain {
    ChainRef chain = 1;
    ChainStatus status = 2;
    repeated NodeDetails nodes = 3;

    /**
     * List of method available through NativeCall
     */
    repeated string supportedMethods = 4;
    repeated string excludedMethods = 5;
    repeated Capabilities capabilities = 6;
    int64 currentHeight = 7;

    /**
     * List of subscriptions available through NativeSubscribe
     */
    repeated string supportedSubscriptions = 8;
    int64 current_lower_block = 9;
    int64 current_lower_slot = 10;
}

message BuildInfo {
    string version = 1;
}

message StatusRequest {
    repeated ChainRef chains = 1;
}

message ChainStatus {
    ChainRef chain = 1;
    AvailabilityEnum availability = 2;
    uint32 quorum = 3;
}

message NodeDetails {
    uint32 quorum = 1;
    repeated Label labels = 2;
}

enum Capabilities {
    CAP_NONE = 0;
    CAP_CALLS = 1;
    CAP_BALANCE = 2;
    CAP_WS_HEAD = 3;
}

message Label {
    string name = 1;
    string value = 2;
}

message Selector {
    oneof selector_type {
        LabelSelector labelSelector = 1;
        OrSelector orSelector = 2;
        AndSelector andSelector = 3;
        NotSelector notSelector = 4;
        ExistsSelector existsSelector = 5;
        HeightSelector height_selector = 6;
        SlotHeightSelector slot_height_selector = 7;
    }

    bool should_be_forwarded = 100;
}

message HeightSelector {
    int64 height = 1;
}

message SlotHeightSelector {
    int64 slotHeight = 1;
}

message LabelSelector {
    string name = 1;
    repeated string value = 2;
}

message OrSelector {
    repeated Selector selectors = 1;
}

message AndSelector {
    repeated Selector selectors = 1;
}

message NotSelector {
    Selector selector = 1;
}

message ExistsSelector {
    string name = 1;
}
