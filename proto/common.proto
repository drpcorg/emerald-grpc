syntax = "proto3";
package emerald;
option java_package = "io.emeraldpay.api.proto";

message Chain {
    ChainRef type = 1;
}

enum ChainRef {
    CHAIN_UNSPECIFIED = 0;

    CHAIN_BITCOIN__MAINNET = 1;
    // CHAIN_GRIN = 2;

    CHAIN_ETHEREUM__MAINNET = 100;
    CHAIN_ETHEREUM_CLASSIC__MAINNET = 101;
    CHAIN_FANTOM__MAINNET = 102; // Fantom, https://fantom.foundation/

    // Sidechains and state channels start with 1_000
    // CHAIN_LIGHTNING = 1001;
    CHAIN_POLYGON_POS__MAINNET = 1002; // Matic PoS Ethereum sidechain based on Polygon
    CHAIN_RSK__MAINNET = 1003; // RSK sidechain, https://www.rsk.co/
    CHAIN_ARBITRUM__MAINNET = 1004; // Arbitrum (next generation Layer2 technologies for Ethereum), https://arbitrum.io
    CHAIN_OPTIMISM__MAINNET = 1005; // Optimism (low-cost and lightning-fast Ethereum L2 blockchain), https://www.optimism.io
    CHAIN_BSC__MAINNET = 1006; // Binance Smart Chain, https://docs.bnbchain.org/docs/learn/intro
    CHAIN_POLYGON_ZKEVM__MAINNET = 1007; // Polygon ZK-EVM
    CHAIN_ARBITRUM_NOVA__MAINNET = 1008; // Arbitrum Nova, https://arbitrum.io
    CHAIN_ZKSYNC__MAINNET = 1009; // zkSync, https://zksync.io/
    CHAIN_BASE__MAINNET = 1010; // Base, https://base.org/
    CHAIN_LINEA__MAINNET = 1011; // Linea, https://docs.linea.build
    CHAIN_GNOSIS__MAINNET = 1012; // Gnosis, https://www.gnosis.io/
    CHAIN_AVALANCHE__MAINNET = 1013; // Avalanche, https://www.avax.network/

    CHAIN_STARKNET__MAINNET = 1014;
    CHAIN_AURORA__MAINNET = 1015;
    CHAIN_SCROLL__MAINNET = 1016; // https://scroll.io/portal, mainnet for l2 doen't exists now
    CHAIN_MANTLE__MAINNET = 1017;
    CHAIN_KLAYTN__MAINNET = 1018;
    CHAIN_CELO__MAINNET = 1019;
    CHAIN_MOONBEAM__MAINNET = 1020;
    CHAIN_MOONBEAM__MOONRIVER = 1021;
    CHAIN_CRONOS__MAINNET = 1022;
    CHAIN_METIS__MAINNET = 1023;
    CHAIN_OPBNB__MAINNET = 1024;
    CHAIN_KAVA__MAINNET = 1025;
    CHAIN_ASTAR__MAINNET = 1026;
    CHAIN_VARA__MAINNET = 1027;
    CHAIN_SOLANA__MAINNET = 1028;
    CHAIN_HAQQ__MAINNET = 1029;
    CHAIN_FILECOIN__MAINNET = 1030;
    CHAIN_FUSE__MAINNET = 1031;
    CHAIN_OKTC__MAINNET = 1032;
    CHAIN_MANTA_PACIFIC__MAINNET = 1033;
    CHAIN_HARMONY__MAINNET_SHARD_0 = 1034;
    CHAIN_HARMONY__MAINNET_SHARD_1 = 1035;
    CHAIN_IMMUTABLE_ZKEVM__MAINNET = 1036;
    CHAIN_ZORA__MAINNET = 1037;
    CHAIN_MODE__MAINNET = 1038;
    CHAIN_EVMOS__MAINNET = 1039;
    CHAIN_NEON_EVM__MAINNET = 1040;
    CHAIN_BOBA_ETHEREUM__MAINNET = 1041;
    CHAIN_HECO__MAINNET = 1042;
    CHAIN_RONIN__MAINNET = 1043;
    CHAIN_BOBA_BNB__MAINNET = 1044;
    CHAIN_ZETA__MAINNET = 1045;
    CHAIN_BITTORRENT__MAINNET = 1046;
    CHAIN_THUNDERCORE__MAINNET = 1047;
    CHAIN_CORE__MAINNET = 1048;
    CHAIN_TELOS__MAINNET = 1049;
    CHAIN_NEAR__MAINNET = 1050;
    CHAIN_BLAST__MAINNET = 1051;
    CHAIN_DYMENSION__MAINNET = 1052;
    CHAIN_ETHEREUM_BEACON__MAINNET = 1053;

    // Testnets start with 10_000
    CHAIN_ETHEREUM__MORDEN = 10001;
    CHAIN_ETHEREUM__KOVAN = 10002;
    CHAIN_BITCOIN__TESTNET = 10003;
    // CHAIN_FLOONET = 10004;
    CHAIN_ETHEREUM__GOERLI = 10005;
    CHAIN_ETHEREUM__ROPSTEN = 10006;
    CHAIN_ETHEREUM__RINKEBY = 10007;
    CHAIN_ETHEREUM__SEPOLIA = 10008;
    CHAIN_ARBITRUM__GOERLI = 10009;
    CHAIN_OPTIMISM__GOERLI = 10010;
    CHAIN_POLYGON_ZKEVM__TESTNET = 10011; // Polygon ZK-EVM
    CHAIN_ZKSYNC__TESTNET = 10012; // zkSync, https://zksync.io/
    CHAIN_POLYGON_POS__MUMBAI = 10013;
    CHAIN_BASE__GOERLI = 10014;
    CHAIN_LINEA__GOERLI = 10015;
    CHAIN_FANTOM__TESTNET = 10016;
    CHAIN_GNOSIS__CHIADO = 10017;
    CHAIN_AVALANCHE__FUJI = 10018;
    CHAIN_STARKNET__GOERLI  = 10019;
    CHAIN_STARKNET__GOERLI2 = 10020;
    CHAIN_AURORA__TESTNET = 10021;
    CHAIN_SCROLL__ALPHANET = 10022;
    CHAIN_MANTLE__TESTNET = 10023;
    CHAIN_KLAYTN__BAOBAB = 10024;
    CHAIN_SCROLL__SEPOLIA = 10025;
    CHAIN_BSC__TESTNET = 10026;
    CHAIN_ETHEREUM__HOLESKY = 10027;
    CHAIN_MOONBEAM__ALPHA = 10028;
    CHAIN_CELO__ALFAJORES = 10029;
    CHAIN_CRONOS__TESTNET = 10030;
    CHAIN_METIS__GOERLI = 10031;
    CHAIN_OPBNB__TESTNET = 10032;
    CHAIN_KAVA__TESTNET = 10033;
    CHAIN_IMMUTABLE_ZKEVM__TESTNET = 10034;
    CHAIN_ASTAR__ZKATANA = 10035;
    CHAIN_VARA__TESTNET = 10036;
    CHAIN_SOLANA__TESTNET = 10037;
    CHAIN_OPTIMISM__SEPOLIA = 10038;
    CHAIN_SOLANA__DEVNET = 10039;
    CHAIN_BASE__SEPOLIA = 10040;
    CHAIN_HAQQ__TESTNET = 10041;
    CHAIN_FILECOIN__CALIBRATION = 10042;
    CHAIN_TAIKO__JOLNIR = 10043;
    CHAIN_OKTC__TESTNET = 10044;
    CHAIN_MANTA_PACIFIC__TESTNET = 10045;
    CHAIN_ZKSYNC__SEPOLIA = 10046;
    CHAIN_BERACHAIN__ARTIO = 10047;
    CHAIN_POLYGON__AMOY = 10048;
    CHAIN_BLAST__SEPOLIA = 10049;
    CHAIN_LISK__TESTNET = 10050;
    CHAIN_ARBITRUM__SEPOLIA = 10051;
    CHAIN_TAIKO__KATLA = 10052;
    CHAIN_ZORA__SEPOLIA = 10053;
    CHAIN_MODE__TESTNET = 10054;
    CHAIN_EVMOS__TESTNET = 10055;
    CHAIN_NEON_EVM__DEVNET = 10056;
    CHAIN_HECO__TESTNET = 10057;
    CHAIN_METIS__SEPOLIA = 10058;
    CHAIN_PLAYNANCE__TESTNET = 10059;
    CHAIN_BITTORRENT__TESTNET = 10060;
    CHAIN_THUNDERCORE__TESTNET = 10061;
    CHAIN_CORE__TESTNET = 10062;
    CHAIN_TELOS__TESTNET = 10063;
    CHAIN_NEAR__TESTNET = 10064;
    CHAIN_NEAR__BETANET = 10065;
    CHAIN_MANTLE__SEPOLIA = 10066;
    CHAIN_OP_CELESTIA__TESTNET = 10067;
    CHAIN_ORBIT_ANYTRUST__TESTNET = 10068;
    CHAIN_ETHEREUM_BEACON__GOERLI = 10069;
    CHAIN_ETHEREUM_BEACON__SEPOLIA = 10070;
    CHAIN_ETHEREUM_BEACON__HOLESKY = 10071;


    // Non-standard starts from 20_000
}

message SingleAddress {
    string address = 1;
}

message XpubAddress {
    // base58 encoded string for xpub, https://en.bitcoin.it/wiki/BIP_0032#Serialization_format
    string xpub = 1;
    uint64 start = 3;
    uint64 limit = 4;
    uint64 unused_limit = 5;
}

message MultiAddress {
    repeated SingleAddress addresses = 1;
}

message ReferenceAddress {
    uint64 refid = 1;
}

message AnyAddress {
    oneof addr_type {
        SingleAddress address_single = 1;
        MultiAddress address_multi = 2;
        XpubAddress address_xpub = 3;
        ReferenceAddress address_ref = 4;
    }
}

message Asset {
    ChainRef chain = 1;
    string code = 2;
}

message BlockInfo {
    uint64 height = 1;
    string block_id = 2;
    uint64 timestamp = 3;
}

enum AvailabilityEnum {
    AVAIL_UNKNOWN = 0;
    AVAIL_OK = 1;
    AVAIL_LAGGING = 2;
    AVAIL_IMMATURE = 3;
    AVAIL_SYNCING = 4;
    AVAIL_UNAVAILABLE = 5;
    AVAIL_FORKED = 6;
}
